# section name should be the service_name
#[rsyslog]
# generic section can be specified with section name as GENERIC
#[GENERIC]
#
# actions can be start, stop, whatever remote command takes...
# %(action)s and %(service_name)s are expand with attributes values
#
# %(step)s attribute is available for fallback commands
#
# use_sudo is True or False
#use_sudo = True
#
# pre-run commands can be generic or specific per action
#pre = generic-pre_check %(service_name)s
#pre_<action> = pre-<action>_check %(service_name)s
#
# command to run is required. It can be generic or specific per action
#cmd = /etc/init.d/%(service_name)s %(action)s
#cmd_reload = /bin/reloader_%(service_name)s %(action)s
#
# post-run commands can be generic or specific per action
#post = generic-post_check %(service_name)s
#post_<action> = post-<action>_check %(service_name)s
#
# fallback commands can be generic or specific per action
#fallback = generic-fallback_command %(service_name)s
#fallback_<action> = generic-fallback_command %(service_name)s

[GENERIC]
use_sudo = True
cmd = /etc/init.d/%(service_name)s %(action)s
cmd_activate = update-rc.d %(service_name)s enable
pre = ls /etc/init.d/%(service_name)s >/dev/null

[rsyslog]
use_sudo = True
cmd = echo /etc/init.d/%(service_name)s %(action)s
pre = ls -la /etc/init.d/%(service_name)s
post = echo "%(service_name)s is running ?"
fallback_start = echo "START recovery(%(step)s) %(action)s %(service_name)s"
fallback_force-reload = echo "recovery(%(step)s) %(action)s %(service_name)s"

[apache2]
use_sudo = True
cmd = /etc/init.d/%(service_name)s %(action)s
cmd_server_status = apachectl status
path_sites_available = /etc/apache2/sites-available
path_sites_enabled = /etc/apache2/sites-enabled

[test]
use_sudo = True
cmd_debian = echo "This is debian!"
cmd = /etc/init.d/debian/%(service_name)s %(action)s
